
08_LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001c4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  000001c4  00000238  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000028c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000011a5  00000000  00000000  00000378  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008a7  00000000  00000000  0000151d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007b8  00000000  00000000  00001dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  0000257c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004b6  00000000  00000000  0000276c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c73  00000000  00000000  00002c22  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00003895  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ec       	ldi	r30, 0xC4	; 196
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 38       	cpi	r26, 0x84	; 132
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  7a:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <lcd_clock>:
    switch(y)
    {
        case 0  :   lcd_cmd(LCD_START_ADDR + x);                    break;  // Start at display line 0 and column x
        case 1  :   lcd_cmd(LCD_START_ADDR + 0x40 + x);             break;  // Start at display line 1 and column x
        case 2  :   lcd_cmd(LCD_START_ADDR + LCD_COLUMNS * 2 + x);  break;  // Start at display line 2 and column x
        case 3  :   lcd_cmd(LCD_START_ADDR + 0x50 + x);             break;  // Start at display line 3 and column x
  82:	dc 9a       	sbi	0x1b, 4	; 27
  84:	84 e1       	ldi	r24, 0x14	; 20
  86:	8a 95       	dec	r24
  88:	f1 f7       	brne	.-4      	; 0x86 <lcd_clock+0x4>
  8a:	dc 98       	cbi	0x1b, 4	; 27
  8c:	84 e1       	ldi	r24, 0x14	; 20
  8e:	8a 95       	dec	r24
  90:	f1 f7       	brne	.-4      	; 0x8e <lcd_clock+0xc>
  92:	08 95       	ret

00000094 <lcd_set>:
  94:	98 b3       	in	r25, 0x18	; 24
  96:	9b 71       	andi	r25, 0x1B	; 27
  98:	98 bb       	out	0x18, r25	; 24
  9a:	88 23       	and	r24, r24
  9c:	0c f4       	brge	.+2      	; 0xa0 <lcd_set+0xc>
  9e:	c7 9a       	sbi	0x18, 7	; 24
  a0:	86 fd       	sbrc	r24, 6
  a2:	c6 9a       	sbi	0x18, 6	; 24
  a4:	85 fd       	sbrc	r24, 5
  a6:	c5 9a       	sbi	0x18, 5	; 24
  a8:	84 fd       	sbrc	r24, 4
  aa:	c2 9a       	sbi	0x18, 2	; 24
  ac:	0e 94 41 00 	call	0x82	; 0x82 <lcd_clock>
  b0:	08 95       	ret

000000b2 <lcd_cmd>:
  b2:	cf 93       	push	r28
  b4:	c8 2f       	mov	r28, r24
  b6:	de 98       	cbi	0x1b, 6	; 27
  b8:	0e 94 4a 00 	call	0x94	; 0x94 <lcd_set>
  bc:	8c 2f       	mov	r24, r28
  be:	82 95       	swap	r24
  c0:	80 7f       	andi	r24, 0xF0	; 240
  c2:	0e 94 4a 00 	call	0x94	; 0x94 <lcd_set>
  c6:	84 e9       	ldi	r24, 0x94	; 148
  c8:	8a 95       	dec	r24
  ca:	f1 f7       	brne	.-4      	; 0xc8 <lcd_cmd+0x16>
  cc:	cf 91       	pop	r28
  ce:	08 95       	ret

000000d0 <lcd_char>:
  d0:	cf 93       	push	r28
  d2:	c8 2f       	mov	r28, r24
  d4:	de 9a       	sbi	0x1b, 6	; 27
  d6:	0e 94 4a 00 	call	0x94	; 0x94 <lcd_set>
  da:	8c 2f       	mov	r24, r28
  dc:	82 95       	swap	r24
  de:	80 7f       	andi	r24, 0xF0	; 240
  e0:	0e 94 4a 00 	call	0x94	; 0x94 <lcd_set>
  e4:	84 e9       	ldi	r24, 0x94	; 148
  e6:	8a 95       	dec	r24
  e8:	f1 f7       	brne	.-4      	; 0xe6 <lcd_char+0x16>
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <lcd_string>:
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	ec 01       	movw	r28, r24
  f4:	88 81       	ld	r24, Y
  f6:	88 23       	and	r24, r24
  f8:	31 f0       	breq	.+12     	; 0x106 <lcd_string+0x18>
  fa:	21 96       	adiw	r28, 0x01	; 1
  fc:	0e 94 68 00 	call	0xd0	; 0xd0 <lcd_char>
 100:	89 91       	ld	r24, Y+
 102:	81 11       	cpse	r24, r1
 104:	fb cf       	rjmp	.-10     	; 0xfc <lcd_string+0xe>
 106:	df 91       	pop	r29
 108:	cf 91       	pop	r28
 10a:	08 95       	ret

0000010c <lcd_clear>:
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_cmd>
 112:	8f e6       	ldi	r24, 0x6F	; 111
 114:	97 e1       	ldi	r25, 0x17	; 23
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <lcd_clear+0xa>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <lcd_clear+0x10>
 11c:	00 00       	nop
 11e:	08 95       	ret

00000120 <lcd_init>:
 120:	8a b3       	in	r24, 0x1a	; 26
 122:	80 65       	ori	r24, 0x50	; 80
 124:	8a bb       	out	0x1a, r24	; 26
 126:	87 b3       	in	r24, 0x17	; 23
 128:	84 6e       	ori	r24, 0xE4	; 228
 12a:	87 bb       	out	0x17, r24	; 23
 12c:	8b b3       	in	r24, 0x1b	; 27
 12e:	8f 7a       	andi	r24, 0xAF	; 175
 130:	8b bb       	out	0x1b, r24	; 27
 132:	88 b3       	in	r24, 0x18	; 24
 134:	8b 71       	andi	r24, 0x1B	; 27
 136:	88 bb       	out	0x18, r24	; 24
 138:	8f e2       	ldi	r24, 0x2F	; 47
 13a:	95 e7       	ldi	r25, 0x75	; 117
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <lcd_init+0x1c>
 140:	00 c0       	rjmp	.+0      	; 0x142 <lcd_init+0x22>
 142:	00 00       	nop
 144:	80 e2       	ldi	r24, 0x20	; 32
 146:	0e 94 4a 00 	call	0x94	; 0x94 <lcd_set>
 14a:	94 e9       	ldi	r25, 0x94	; 148
 14c:	9a 95       	dec	r25
 14e:	f1 f7       	brne	.-4      	; 0x14c <lcd_init+0x2c>
 150:	88 e2       	ldi	r24, 0x28	; 40
 152:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_cmd>
 156:	8c e0       	ldi	r24, 0x0C	; 12
 158:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_cmd>
 15c:	86 e0       	ldi	r24, 0x06	; 6
 15e:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_cmd>
 162:	0e 94 86 00 	call	0x10c	; 0x10c <lcd_clear>
 166:	08 95       	ret

00000168 <lcd_home>:
 168:	82 e0       	ldi	r24, 0x02	; 2
 16a:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_cmd>
 16e:	8f e6       	ldi	r24, 0x6F	; 111
 170:	97 e1       	ldi	r25, 0x17	; 23
 172:	01 97       	sbiw	r24, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <lcd_home+0xa>
 176:	00 c0       	rjmp	.+0      	; 0x178 <lcd_home+0x10>
 178:	00 00       	nop
 17a:	08 95       	ret

0000017c <lcd_shift>:
//  | Parameter:    shift   ->  0 = right                           |
//  |                           1 = left                            |
//  +---------------------------------------------------------------+
void lcd_shift(unsigned char shift)
{
    if(shift == 0)
 17c:	81 11       	cpse	r24, r1
 17e:	04 c0       	rjmp	.+8      	; 0x188 <lcd_shift+0xc>
        lcd_cmd(LCD_SHIFT | LCD_SHIFT_DISPLAY | LCD_SHIFT_RIGHT);
 180:	8c e1       	ldi	r24, 0x1C	; 28
 182:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_cmd>
 186:	03 c0       	rjmp	.+6      	; 0x18e <lcd_shift+0x12>
    else
        lcd_cmd(LCD_SHIFT | LCD_SHIFT_DISPLAY);
 188:	88 e1       	ldi	r24, 0x18	; 24
 18a:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_cmd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18e:	84 e9       	ldi	r24, 0x94	; 148
 190:	8a 95       	dec	r24
 192:	f1 f7       	brne	.-4      	; 0x190 <lcd_shift+0x14>
 194:	08 95       	ret

00000196 <main>:
 196:	0e 94 90 00 	call	0x120	; 0x120 <lcd_init>
 19a:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_home>
 19e:	80 e6       	ldi	r24, 0x60	; 96
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 77 00 	call	0xee	; 0xee <lcd_string>
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_shift>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ac:	2f ef       	ldi	r18, 0xFF	; 255
 1ae:	8b e4       	ldi	r24, 0x4B	; 75
 1b0:	9d e1       	ldi	r25, 0x1D	; 29
 1b2:	21 50       	subi	r18, 0x01	; 1
 1b4:	80 40       	sbci	r24, 0x00	; 0
 1b6:	90 40       	sbci	r25, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <main+0x1c>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <main+0x26>
 1bc:	00 00       	nop
 1be:	f3 cf       	rjmp	.-26     	; 0x1a6 <main+0x10>

000001c0 <_exit>:
 1c0:	f8 94       	cli

000001c2 <__stop_program>:
 1c2:	ff cf       	rjmp	.-2      	; 0x1c2 <__stop_program>
